library(dplyr)
library(rpart)
train_set <- tbl_df(read.csv('./competition_data/train_set.csv'))
tube <- tbl_df(read.csv('./competition_data/tube.csv'))
train_tube <- tbl_df(merge(train_set, tube))
rpart(cost ~ supplier + quantity + diameter + wall + length + num_bends + bend_radius,
data = train_tube)
fit <- rpart(cost ~ supplier + quantity + diameter + wall + length + num_bends + bend_radius,
data = train_tube)
plot(fit)
plot(fit)
text(fit, use.n = TRUE)
plot(fit)
text(fit)
rpart::rsq.rpart()
rpart::meanvar(fit)
rpart::rsq.rpart(fit)
rpart::plotcp(fit)
predict(fit, newdata = train_tube)
in_sample <- predict(fit, newdata = train_tube)
str(in_sample)
sqrt(mean((train_tube - in_sample)^2))
sqrt(mean((train_tube$cost - in_sample)^2))
res <- train_tube$cost - in_sample
plot(res)
mean(res)
sd(res)
hist(res)
install.packages("Metrics")
library(Metrics)
rmsle(train_tube$cost, in_sample)
fit <- rpart(cost ~ supplier + annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube)
in_sample <- predict(fit, newdata = train_tube)
rmsle(train_tube$cost, in_sample)
library(randomForest)
rf.fit <- randomForest(cost ~ supplier + annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube,
ntree =80, do.trace = 2)
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube,
ntree =80, do.trace = 2)
in_sample <- predict(rf.fit, newdata = train_tube)
rmsle(train_tube$cost, in_sample)
importance(rf.fit)
trainIndex <- createDataPartition(train_tube, p = .7,
list = FALSE,
times = 1)
library(caret)
set.seed(0)
trainIndex <- createDataPartition(train_tube, p = .7,
list = FALSE,
times = 1)
trainIndex <- createDataPartition(train_tube, p = .7)
fit <- rpart(cost ~ supplier + annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube)
trainIndex <- createDataPartition(train_tube$cost)
trainIndex <- createDataPartition(train_tube$cost, p = 0.7)
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 10, do.trace = 2)
trainIndex
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 10, do.trace = 2)
trainIndex <- createDataPartition(train_tube$cost, p = 0.7, list = FALSE)
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 10, do.trace = 2)
in_sample <- predict(rf.fit, newdata = train_tube)
rmsle(train_tube$cost, in_sample)
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 500, do.trace = 2)
in_sample <- predict(rf.fit, newdata = train_tube[trainIndex, ])
rmsle(train_tube$cost, in_sample)
rmsle(train_tube$cost[trainIndex,], in_sample)
rmsle(train_tube[trainIndex, 'cost'], in_sample)
out_sample <- predict(rf.fit, newdata = train_tube[-trainIndex, ])
rmsle(train_tube[-trainIndex, 'cost'], in_sample)
rmsle(train_tube[-trainIndex, 'cost'], out_sample)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
fit <- rpart(cost ~ supplier + annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
rf.fit <- randomForest(cost ~ annual_usage + quantity +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
in_sample <- predict(rf.fit, newdata = train_tube[trainIndex, ])
out_sample <- predict(rf.fit, newdata = train_tube[-trainIndex, ])
rmsle(train_tube[trainIndex, 'cost'], in_sample)
rmsle(train_tube[-trainIndex, 'cost'], out_sample)
train_tube$material_id
levels(train_tube$material_id)
is.na(train_tube$material_id)
train_tube[is.na(train_tube$material_id)]
train_tube[is.na(train_tube$material_id), ]
train_tube[is.na(train_tube$material_id), c('tube_assembly_id', 'quantity', 'cost', 'material_id')]
train_tube[is.na(train_tube$material_id), c('tube_assembly_id', 'cost', 'material_id', 'diameter', 'length')]
material_na_mask <- is.na(train_tube$material_id)
train_tube$material_id[material_na_mask]
train_tube$material_id[material_na_mask] <- 0
train_tube$material_id[material_na_mask] <- '0'
train_tube$material_id[material_na_mask] <- factor('0')
train_tube$material_id[material_na_mask]
train_tube$material_id[material_na_mask] <- 'SP'
train_tube$material_id <- as.character(train_tube$material_id)
train_tube$material_id[material_na_mask] <- '0'
train_tube$material_id <- as.factor(train_tube$material_id)
levels(train_tube$material_id)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
in_sample <- predict(rf.fit, newdata = train_tube[trainIndex, ])
out_sample <- predict(rf.fit, newdata = train_tube[-trainIndex, ])
rmsle(train_tube[trainIndex, 'cost'], in_sample)
rmsle(train_tube[-trainIndex, 'cost'], out_sample)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
'end_a_1x'+ 'end_a_2x' + 'end_x_1x' + 'end_x_2x' +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
end_a_1x + end_a_2x + end_x_1x + end_x_2x +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 100, do.trace = 5)
in_sample <- predict(rf.fit, newdata = train_tube[trainIndex, ])
out_sample <- predict(rf.fit, newdata = train_tube[-trainIndex, ])
rmsle(train_tube[trainIndex, 'cost'], in_sample)
rmsle(train_tube[-trainIndex, 'cost'], out_sample)
trainIndex <- createDataPartition(train_tube$cost, p = 0.9, list = FALSE)
rf.fit <- randomForest(cost ~ annual_usage + quantity + material_id +
diameter + wall + length + num_bends + bend_radius +
end_a_1x + end_a_2x + end_x_1x + end_x_2x +
end_a + end_x + num_boss + num_bracket,
data = train_tube, subset = trainIndex,
ntree = 200, do.trace = 5)
in_sample <- predict(rf.fit, newdata = train_tube[trainIndex, ])
out_sample <- predict(rf.fit, newdata = train_tube[-trainIndex, ])
rmsle(train_tube[trainIndex, 'cost'], in_sample)
rmsle(train_tube[-trainIndex, 'cost'], out_sample)
library(xgboost)
library(dplyr)
library(rpart)
library(randomForest)
library(Metrics)
library(caret)
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket)
train_tube_response <- train_tube %>% select(cost)
xgboost(data=train_tube_features, label=train_tube_response, nrounds = 10)
xgb.DMatrix(train_tube_features)
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket) %>% as.matrix()
xgboost(data=train_tube_features, label=train_tube_response, nrounds = 10)
train_tube_response <- train_tube %>% select(cost) %>% as.matrix()
xgboost(data=train_tube_features, label=train_tube_response, nrounds = 10)
library(dplyr)
library(rpart)
library(randomForest)
library(Metrics)
library(caret)
library(xgboost)
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket) %>% Matrix::Matrix()
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket)
str(train_tube_features)
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket) %>% as.matrix()
str(train_tube_features)
train_tube_features_Matrix <- Matrix::Matrix(train_tube_features)
train_tube_features <- train_tube %>% select(annual_usage, quantity, material_id,
diameter, wall, length, num_bends, bend_radius,
end_a_1x, end_a_2x, end_x_1x, end_x_2x,
end_a, end_x, num_boss, num_bracket) %>% as.matrix()
str(train_tube_features)
train_tube_response <- train_tube %>% select(cost) %>% as.numeric()
train_tube_response <- train_tube %>% select(cost)
str(train_tube_response)
train_tube_response <- train_tube$cost
str(train_tube_response)
xgboost(data=train_tube_features, label=train_tube_response, nrounds = 10)
traceback()
